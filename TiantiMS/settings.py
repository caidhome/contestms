"""
Django settings for TiantiMS project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '_w*sfc^-kz#7(k7#8ke_g(npna$(kt()3ky$803q3+hfrv8qs#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'userms.apps.UsermsConfig',
    'contestms.apps.ContestmsConfig',
    'certms.apps.CertmsConfig',
]

MIDDLEWARE = [
    # 'django.middleware.cache.UpdateCacheMiddleware',  # 放在第一
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'django.middleware.cache.FetchFromCacheMiddleware',  # 放在最后
]

ROOT_URLCONF = 'TiantiMS.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries': {
                'filters': 'contestms.templatetags.filters'
            },
        },
    },
]

WSGI_APPLICATION = 'TiantiMS.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        'ENGINE': 'django.db.backends.mysql',
        'HOST': '127.0.0.1',  # 数据库主机
        'PORT': 3306,  # 数据库端口
        'USER': 'root',  # 数据库用户名
        'PASSWORD': 'root',  # 数据库用户密码
        'NAME': 'tiantidb'  # 数据库名字
        # 'ENGINE': 'django.db.backends.mysql',
        # 'HOST': '81.69.38.227',  # 数据库主机
        # 'PORT': 8257,  # 数据库端口
        # 'USER': 'ttsuser',  # 数据库用户名
        # 'PASSWORD': '##d413d413@Tts..',  # 数据库用户密码
        # 'NAME': 'ttsdb'  # 数据库名字
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


STATIC_URL = '/static/'

# STATIC_ROOT = 'static' ## 新增行
# STATICFILES_DIRS = [
#   os.path.join(BASE_DIR, '/static/'), ##修改地方
# ]
STATICFILES_DIRS = [
  os.path.join(BASE_DIR, 'static'), ##修改地方
]


DOWNLOAD_ROOT = os.path.join(BASE_DIR, 'static/download')
UPLOAD_ROOT = os.path.join(BASE_DIR,'static/upload')

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.163.com'	  #这个是163 邮箱需要填写的，其他类型的邮箱待查
EMAIL_PORT = 465		#这个是加密的等级之类的东西
EMAIL_HOST_USER = 'hongliuTTS@163.com'	#这个是用来发送邮件的邮箱，与最后一个填写的邮箱地址一致
EMAIL_HOST_PASSWORD = 'QBPBRCJCLWSRJJGF'  #授权密码
EMAIL_USE_SSL = True
EMAIL_FROM = 'hongliuTTS@163.com'

PRO_HOST_URL = 'http://81.69.38.227'


# SESSION_ENGINE = "django.contrib.sessions.backends.cache"
# SESSION_CACHE_ALIAS = "session"

CACHES = {
# django存缓默认位置,redis 0号库
# default: 连接名称
"default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://81.69.38.227:8217/0",
        "OPTIONS": {
               "CLIENT_CLASS": "django_redis.client.DefaultClient",
                }
           },
        # django session存 reidis 1 号库（现在基本不需要使用）
        "session": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://81.69.38.227:8217/1",
        "OPTIONS": {
                  "CLIENT_CLASS": "django_redis.client.DefaultClient",
                }
        },
        # 图形验证码，存redis 2号库
        "code": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://81.69.38.227:8217/2",
        "OPTIONS": {
        "CLIENT_CLASS": "django_redis.client.DefaultClient",
                }
          }
}